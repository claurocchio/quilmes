// ---------------------------------------------------------------------------
// This file has been generated by the Web Dynpro Code Generator
// DON'T MODIFY!!! CHANGES WILL BE LOST WHENEVER THE FILE GETS GENERATED AGAIN
// ---------------------------------------------------------------------------
package com.quilmes.baja.wdp;

import java.util.Collections;
import java.util.HashMap;
import java.util.Map;

import com.sap.tc.logging.Location;
import com.sap.tc.webdynpro.progmodel.api.*;
import com.sap.tc.webdynpro.progmodel.gci.*;
import com.sap.tc.webdynpro.progmodel.context.*;
import com.sap.tc.webdynpro.progmodel.gci.*;
import com.sap.tc.webdynpro.services.exceptions.WDRuntimeException;

public class InternalPopup
  implements IPrivatePopup, com.sap.tc.webdynpro.progmodel.gci.IGCIViewDelegate
{

  /**
   * Location for this controller.
   */
  private static final Location logger = Location.getLocation(InternalPopup.class);

  /**
   * Framework implementation of Controller that delegates to this.
   */
  private final com.sap.tc.webdynpro.progmodel.gci.IGCIView wdAlterEgo;

  /**
   * Delegate that implements application defined logic
   */
  private final com.quilmes.baja.Popup delegate;


  // ---- Context --------------------------------------------------------------

  IGCINodeInfo infoContext;

  {

    infoContext = GCIContext.createNode("Context", null, true, true, false, true, false, true, null,
      new IGCIAttributeInfo[] {
        GCIContext.createMappedAttribute("observac", ".BajaUS.observac", false),
        GCIContext.createMappedAttribute("atributo", ".BajaUS.atributo", false),
        GCIContext.createMappedAttribute("resultado", ".BajaUS.resultado", false),
        GCIContext.createMappedAttribute("eleccion", ".BajaUS.eleccion", false),
      },
      (IGCINodeInfo[])null // no child nodes
    );

  }
  
  private IContextNode contextNode;

  private void wdInitContextNode() {
    contextNode = new IContextNode(this, infoContext, (Node)null);
  }

  public IWDNode wdGetRootNode() {
    return contextNode;
  }

  public IContextNode wdGetContext() {
    return contextNode;
  }


  // ---- Actions --------------------------------------------------------------

  /**
   * Returns the action with name <code>aceptar</code>.
   */
  public IWDAction wdGetAceptarAction() {
    return wdAlterEgo.getAction("aceptar");
  }

  /**
   * Returns the action with name <code>cancelar</code>.
   */
  public IWDAction wdGetCancelarAction() {
    return wdAlterEgo.getAction("cancelar");
  }

  /**
   * Create a new action for this controller. A unique name for the action is generated automatially.
   * @param eventHandler is the action's eventhandler with proper signature
   * @param text is the text displayed in the UI element triggering this action
   */
  public IWDAction wdCreateAction(WDActionEventHandler eventHandler, String text) {
    return wdAlterEgo.createAction(null, eventHandler, text, null);
  }

  /**
   * Create a new action with the given name for this controller
   * @param eventHandler is the action's eventhandler with proper signature
   * @param name is the action's name
   * @param text is the text displayed in the UI element triggering this action
   */
  public IWDAction wdCreateNamedAction(WDActionEventHandler eventHandler, String name, String text) {
    return wdAlterEgo.createAction(name, eventHandler, text, null);
  }

  // ---- Controller part ------------------------------------------------------

  /**
   * Creates a new instance of this controller.
   */
  public InternalPopup(com.sap.tc.webdynpro.progmodel.gci.IGCIView alterEgo) {
    this.wdAlterEgo = alterEgo;
    wdInitContextNode();
    this.delegate = new com.quilmes.baja.Popup((IPrivatePopup) this);
    wdAlterEgo.createAction("aceptar", WDActionEventHandler.ACEPTAR, wdAlterEgo.getLocalizedText("action.Popup.aceptar"), "");
    wdAlterEgo.createAction("cancelar", WDActionEventHandler.CANCELAR, wdAlterEgo.getLocalizedText("action.Popup.cancelar"), "");
  }

  /**
   * Returns the public API for this controller instance.
   */
  public com.sap.tc.webdynpro.progmodel.api.IWDViewController wdGetAPI() {
    return (com.sap.tc.webdynpro.progmodel.api.IWDViewController) wdAlterEgo;
  }

  /**
   * Hook method called to initialize view controller.
   */
  public void wdDoInit() {
    logger.pathT("entering: wdDoInit");
    delegate.wdDoInit();
    logger.pathT("exiting: wdDoInit"); 
  }

  /**
   * Hook method called to clean up view controller.
   */
  public void wdDoExit() {
    logger.pathT("entering: wdDoExit");
    delegate.wdDoExit();
    logger.pathT("exiting: wdDoExit"); 
  }

  public Object wdInvokeEventHandler(String handlerName, IWDCustomEvent event)
    throws NoSuchMethodException {
    
    logger.pathT("entering: wdInvokeEventHandler", new Object[] { handlerName } );
    try {
      if("onActionaceptar".equals(handlerName)) {

        delegate.onActionaceptar(event );
        return null;
      }
      if("onActioncancelar".equals(handlerName)) {

        delegate.onActioncancelar(event );
        return null;
      }
      throw new NoSuchMethodException("Eventhandler " + handlerName + " not found for event " + event.getName());
    } finally {
      logger.pathT("exiting: wdInvokeEventHandler"); 
    }
  }

  public void onActionaceptar(IWDCustomEvent wdEvent ) {
    delegate.onActionaceptar(wdEvent );
  }

  public void onActioncancelar(IWDCustomEvent wdEvent ) {
    delegate.onActioncancelar(wdEvent );
  }

  /** outgoing controller usage */
  public com.quilmes.baja.wdp.IPublicBajaUS wdGetBajaUSController() {
    return
      (com.quilmes.baja.wdp.IPublicBajaUS)
        wdAlterEgo
          .getComponentGCI()
            .getPublicInterface("BajaUS");
  }


  // ---- UI Tree ---------------------------------------------------------

  // create UI tree
  public com.sap.tc.webdynpro.progmodel.api.IWDViewElement wdCreateUITree()
  {

    com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDTransparentContainer _RootUIElementContainer
      = (com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDTransparentContainer)
        wdAlterEgo.createElement(com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDTransparentContainer.class,
          "RootUIElementContainer");  
    _RootUIElementContainer.setWidth("400px");
    com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDGridLayout _RootUIElementContainer__Layout
      = (com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDGridLayout)
        _RootUIElementContainer.createLayout(com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDGridLayout.class);

    com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDTextView _TextView
      = (com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDTextView)
        wdAlterEgo.createElement(com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDTextView.class,
          "TextView");  
    _TextView.setDesign(com.sap.tc.webdynpro.clientserver.uielib.standard.api.WDTextViewDesign.valueOf("header2"));
    _TextView.setText(wdAlterEgo.getLocalizedText("view.Popup.TextView.text"));
    com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDGridData _TextView__LayoutData
      = (com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDGridData)
        _TextView.createLayoutData(com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDGridData.class);
    _TextView__LayoutData.setCellBackgroundDesign(com.sap.tc.webdynpro.clientserver.uielib.standard.api.WDCellBackgroundDesign.valueOf("fill1"));
    _TextView__LayoutData.setHAlign(com.sap.tc.webdynpro.clientserver.uielib.standard.api.WDCellHAlign.valueOf("left"));
    _RootUIElementContainer.addChild(_TextView);

    com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDTextEdit _TextEdit
      = (com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDTextEdit)
        wdAlterEgo.createElement(com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDTextEdit.class,
          "TextEdit");  
    _TextEdit.setCols(55);
    _TextEdit.setRows(3);
    _TextEdit.setTooltip(wdAlterEgo.getLocalizedText("view.Popup.TextEdit.tooltip"));
    _TextEdit.bindValue("observac");
    com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDGridData _TextEdit__LayoutData
      = (com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDGridData)
        _TextEdit.createLayoutData(com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDGridData.class);
    _TextEdit__LayoutData.setHAlign(com.sap.tc.webdynpro.clientserver.uielib.standard.api.WDCellHAlign.valueOf("left"));
    _RootUIElementContainer.addChild(_TextEdit);
    _RootUIElementContainer.addChild(wdCreateUITreeForRootUIElementContainer1());
    return (_RootUIElementContainer);
  }

  // create UI tree for RootUIElementContainer1
  private com.sap.tc.webdynpro.progmodel.api.IWDUIElement wdCreateUITreeForRootUIElementContainer1()
  {

    com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDTransparentContainer _RootUIElementContainer1
      = (com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDTransparentContainer)
        wdAlterEgo.createElement(com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDTransparentContainer.class,
          "RootUIElementContainer1");  
    _RootUIElementContainer1.setWidth("100px");
    com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDGridData _RootUIElementContainer1__LayoutData
      = (com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDGridData)
        _RootUIElementContainer1.createLayoutData(com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDGridData.class);
    _RootUIElementContainer1__LayoutData.setHAlign(com.sap.tc.webdynpro.clientserver.uielib.standard.api.WDCellHAlign.valueOf("left"));
    com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDMatrixLayout _RootUIElementContainer1__Layout
      = (com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDMatrixLayout)
        _RootUIElementContainer1.createLayout(com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDMatrixLayout.class);

    com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDButton _Button
      = (com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDButton)
        wdAlterEgo.createElement(com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDButton.class,
          "Button");  
    _Button.setText(wdAlterEgo.getLocalizedText("view.Popup.RootUIElementContainer1.Button.text"));
    _Button.setOnAction(wdAlterEgo.getAction("aceptar"));
    com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDMatrixData _Button__LayoutData
      = (com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDMatrixData)
        _Button.createLayoutData(com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDMatrixData.class);
    _RootUIElementContainer1.addChild(_Button);

    com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDButton _Button1
      = (com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDButton)
        wdAlterEgo.createElement(com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDButton.class,
          "Button1");  
    _Button1.setText(wdAlterEgo.getLocalizedText("view.Popup.RootUIElementContainer1.Button1.text"));
    _Button1.setOnAction(wdAlterEgo.getAction("cancelar"));
    com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDMatrixData _Button1__LayoutData
      = (com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDMatrixData)
        _Button1.createLayoutData(com.sap.tc.webdynpro.clientserver.uielib.standard.api.IWDMatrixData.class);
    _RootUIElementContainer1.addChild(_Button1);
    return (_RootUIElementContainer1);
  }
  

  /**
   * Hook method called to modify view before rendering. Access to UI elements
   * is via the given view API only!
   * 
   * @param firstTime indicates whether the hook is called for the first time
   * during the lifetime of this view
   */
  public void wdDoModifyView(IWDView view, boolean firstTime) {
    logger.pathT("entering: doModifyView");
    com.quilmes.baja.Popup.wdDoModifyView((IPrivatePopup) this, (IPrivatePopup.IContextNode) this.wdGetContext(), view, firstTime);
    logger.pathT("exiting: doModifyView"); 
  }


}
